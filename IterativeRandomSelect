import java.util.Random;

public class IterativeRandomSelect {

	public int randomizedSelectSmall(int[] A, int p, int r, double i)
	{
		while(p < r)
		{
			int q = randomPartition(A,p,r);
			int k = q - p+1;
			
			if(i == k)
				return A[q];
			else if(i < k)
				r = q-1;
			else
			{
				p = p+1;
				i = i-k;
			}
		}
		return A[p];
	}
	
	
	public int randomPartition(int[] A, int p, int r)
	{
		Random rand = new Random();
		int i = rand.nextInt(r - p+1)+p;
		
		int temp = A[r];
		A[r] = A[i];
		A[i] = temp;
		
		return partition(A, p, r);
	}
	
	public int partition(int a[], int p, int r)
	{
		int x = a[r];
		int i = p-1;
		for(int j=p; j<=(r-1); j++)
		{
			if(a[j] <= x)
			{
				i=i+1;
				int temp = a[j];
				a[j]=a[i];
				a[i]=temp;
			}
		}
		int temp = a[i+1];
		a[i+1]=a[r];
		a[r]=temp;
		return i+1;
	}
	
}
